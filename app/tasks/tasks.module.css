.tasksCont {
  height: 100%;
  overflow-y: auto;
  padding-bottom: 20px;
  background: var(--bg-primary);
}

.tasksContainer {
  max-width: 1200px;
  margin: 0 auto;
  padding: 24px;
  background: var(--bg-primary);
  border-radius: 24px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
  min-height: 100%;
  transition: all 0.3s ease;
}

/* Header styles */
.tasksHeader {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 16px;
  margin-bottom: 24px;
  color: white;
  position: relative;
  overflow: hidden;
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

.headerOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
}

.headerContent {
  position: relative;
  z-index: 1;
  padding: 24px;
  text-align: center;
}

.headerTitle {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  margin-bottom: 16px;
}

.titleText {
  font-size: 28px;
  font-weight: 700;
  margin: 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.titleSubtext {
  font-size: 16px;
  margin: 0;
  opacity: 0.9;
}

/* Stats grid styles */
.statsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 16px;
  margin-bottom: 24px;
}

.statCard {
  background: var(--bg-secondary);
  border-radius: 16px;
  padding: 20px;
  display: flex;
  align-items: center;
  gap: 16px;
  transition: all 0.3s ease;
  border: 1px solid var(--border-color);
}

.statCard:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.05);
}

.statIcon {
  width: 48px;
  height: 48px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
}

.totalIcon {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.completedIcon {
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
}

.pendingIcon {
  background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
}

.overdueIcon {
  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
}

.statContent {
  display: flex;
  flex-direction: column;
}

.statValue {
  font-size: 24px;
  font-weight: 700;
  margin: 0;
  color: var(--text-primary);
}

.statLabel {
  font-size: 14px;
  margin: 0;
  color: var(--text-secondary);
}

/* Controls section styles */
.controlsSection {
  background: var(--bg-secondary);
  border-radius: 16px;
  padding: 24px;
  margin-bottom: 24px;
  border: 1px solid var(--border-color);
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: auto auto;
  gap: 16px;
}

.searchAndFilter {
  display: flex;
  flex-direction: column;
  gap: 16px;
  grid-column: 1 / -1;
}

.searchBox {
  position: relative;
  display: flex;
  align-items: center;
  gap: 12px;
  background: var(--bg-primary);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  padding: 12px 16px;
  min-width: 250px;
}

.searchBox svg {
  color: var(--text-secondary);
}

.searchInput {
  border: none;
  outline: none;
  background: transparent;
  color: var(--text-primary);
  font-size: 16px;
  flex: 1;
}

.searchInput::placeholder {
  color: var(--text-secondary);
}

.filterButtons {
  display: flex;
  gap: 8px;
}

.filterButton {
  padding: 8px 16px;
  border: 1px solid var(--border-color);
  background: var(--bg-primary);
  color: var(--text-secondary);
  border-radius: 8px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.3s ease;
}

.filterButton:hover {
  background: var(--bg-hover);
  color: var(--text-primary);
}

.activeFilter {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  color: white !important;
  border-color: transparent !important;
}

.addTaskButton {
  grid-column: 1;
  grid-row: 2;
  justify-self: start;
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  transition: all 0.3s ease;
  white-space: nowrap;
}

.addTaskButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

/* View Switcher */
.viewSwitcher {
  grid-column: 2;
  grid-row: 2;
  display: flex;
  gap: 8px;
  justify-self: end;
  align-self: end;
}

.viewButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 8px 16px;
  border: 1px solid var(--border-color);
  background: var(--bg-primary);
  color: var(--text-secondary);
  border-radius: 8px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.3s ease;
}

.viewButton:hover {
  background: var(--bg-hover);
  color: var(--text-primary);
}

.activeView {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
  color: white !important;
  border-color: transparent !important;
}

@media (max-width: 768px) {
  .controlsSection {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto;
  }

  .searchAndFilter {
    grid-row: 1;
  }

  .addTaskButton {
    grid-row: 2;
    grid-column: 1;
    width: 100%;
  }

  .viewSwitcher {
    grid-row: 3;
    grid-column: 1;
    justify-self: center;
  }

  .viewButton {
    padding: 6px 12px;
    font-size: 12px;
  }

  .viewButton svg {
    width: 16px;
    height: 16px;
  }
}

/* Task form styles */
.taskForm {
  background: var(--bg-secondary);
  border-radius: 16px;
  padding: 24px;
  margin-bottom: 24px;
  border: 1px solid var(--border-color);
}

.formTitle {
  font-size: 20px;
  font-weight: 600;
  margin: 0 0 20px 0;
  color: var(--text-primary);
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 16px;
  margin-bottom: 20px;
}

.taskInput,
.projectSelect,
.prioritySelect,
.statusSelect,
.dateInput,
.timeInput {
  padding: 12px 16px;
  border-radius: 12px;
  border: 1px solid var(--border-color);
  font-size: 16px;
  outline: none;
  transition: all 0.3s ease;
  background: var(--bg-primary);
  color: var(--text-primary);
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/* Custom select styling */
.projectSelect,
.prioritySelect,
.statusSelect {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%236B7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 12px center;
  background-size: 16px;
  padding-right: 40px;
}

.projectSelect option,
.prioritySelect option,
.statusSelect option {
  padding: 8px;
  background: var(--bg-primary);
  color: var(--text-primary);
}

.taskInput:focus,
.projectSelect:focus,
.prioritySelect:focus,
.statusSelect:focus,
.dateInput:focus,
.timeInput:focus {
  border-color: var(--accent-color);
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
}

.taskInput:hover,
.projectSelect:hover,
.prioritySelect:hover,
.statusSelect:hover,
.dateInput:hover,
.timeInput:hover {
  border-color: var(--border-hover);
}

/* Date input specific styling */
.dateInput::-webkit-calendar-picker-indicator {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%236B7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='4' width='18' height='18' rx='2' ry='2'%3E%3C/rect%3E%3Cline x1='16' y1='2' x2='16' y2='6'%3E%3C/line%3E%3Cline x1='8' y1='2' x2='8' y2='6'%3E%3C/line%3E%3Cline x1='3' y1='10' x2='21' y2='10'%3E%3C/line%3E%3C/svg%3E");
  background-size: 16px;
  width: 16px;
  height: 16px;
  cursor: pointer;
  opacity: 0.6;
  transition: opacity 0.3s ease;
}

.dateInput::-webkit-calendar-picker-indicator:hover {
  opacity: 1;
}

/* Number input specific styling */
.timeInput::-webkit-inner-spin-button,
.timeInput::-webkit-outer-spin-button {
  opacity: 1;
  background: transparent;
  cursor: pointer;
}

/* Disabled state */
.taskInput:disabled,
.projectSelect:disabled,
.prioritySelect:disabled,
.statusSelect:disabled,
.dateInput:disabled,
.timeInput:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: var(--bg-disabled);
}

.formActions {
  display: flex;
  gap: 12px;
  justify-content: flex-start;
}

.saveButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-size: 16px;
  font-weight: 500;
  transition: all 0.3s ease;
}

.saveButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
}

.cancelButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  background: transparent;
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
}

.cancelButton:hover {
  background: var(--bg-hover);
  color: var(--text-primary);
}

/* Tasks section styles */
.tasksSection {
  background: var(--bg-secondary);
  border-radius: 16px;
  padding: 24px;
  border: 1px solid var(--border-color);
}

.sectionTitle {
  font-size: 20px;
  font-weight: 600;
  margin-top: 0;
  margin-bottom: 24px;
  color: var(--text-primary);
}

.tasksList {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.emptyState {
  text-align: center;
  padding: 48px 24px;
  color: var(--text-secondary);
}

.emptyState svg {
  color: var(--text-secondary);
  margin-bottom: 16px;
}

.emptyState h3 {
  margin: 0 0 8px 0;
  color: var(--text-primary);
  font-size: 18px;
}

.emptyState p {
  margin: 0;
  font-size: 14px;
}

.taskItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 20px;
  border-radius: 12px;
  background: var(--bg-primary);
  border: 1px solid var(--border-color);
  transition: all 0.3s ease;
}

.taskItem:hover {
  transform: translateX(4px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

.taskLeft {
  display: flex;
  align-items: flex-start;
  gap: 16px;
  flex: 1;
}

.checkButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 4px;
  border-radius: 50%;
  color: var(--text-secondary);
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.checkButton:hover {
  background: var(--bg-hover);
  color: var(--text-primary);
}

.completedCheck {
  color: #10b981;
}

.taskInfo {
  flex: 1;
}

.taskName {
  margin: 0 0 8px 0;
  font-size: 16px;
  font-weight: 500;
  color: var(--text-primary);
  transition: all 0.3s ease;
}

.completedTask {
  text-decoration: line-through;
  opacity: 0.6;
}

.taskMeta {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
}

.taskProject {
  font-size: 12px;
  color: white;
  padding: 4px 8px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 8px;
}

.taskPriority {
  font-size: 12px;
  color: white;
  padding: 4px 8px;
  border-radius: 8px;
  font-weight: 500;
}

.taskTime,
.taskDue {
  display: flex;
  align-items: center;
  gap: 4px;
  font-size: 12px;
  color: var(--text-secondary);
}

.taskActions {
  display: flex;
  gap: 8px;
}

.editButton,
.deleteButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 8px;
  border-radius: 8px;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.editButton {
  color: var(--text-secondary);
}

.editButton:hover {
  background: rgba(102, 126, 234, 0.1);
  color: #667eea;
}

.deleteButton {
  color: var(--text-secondary);
}

.deleteButton:hover {
  background: rgba(239, 68, 68, 0.1);
  color: #ef4444;
}

/* Responsive styles */
@media (max-width: 768px) {
  .tasksContainer {
    padding: 16px;
  }

  .controlsSection {
    flex-direction: column;
    align-items: stretch;
  }

  .searchAndFilter {
    flex-direction: column;
    gap: 12px;
  }

  .searchBox {
    min-width: auto;
  }

  .filterButtons {
    flex-wrap: wrap;
  }

  .formGrid {
    grid-template-columns: 1fr;
  }

  .formActions {
    justify-content: center;
  }

  .taskLeft {
    flex-direction: column;
    gap: 12px;
  }

  .taskActions {
    flex-direction: column;
  }

  .taskMeta {
    flex-direction: column;
    align-items: flex-start;
    gap: 8px;
  }
}

@media (max-width: 480px) {
  .statsGrid {
    grid-template-columns: 1fr 1fr;
  }

  .taskItem {
    padding: 16px;
  }

  .formActions {
    flex-direction: column;
    gap: 8px;
  }

  .saveButton,
  .cancelButton {
    width: 100%;
    justify-content: center;
  }
}

.filterControls {
  display: flex;
  align-items: center;
  gap: 16px;
  margin-top: 16px;
}

.filterSelect {
  padding: 8px 12px;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  background-color: var(--background-secondary);
  color: var(--text-primary);
  font-size: 14px;
  min-width: 150px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.filterSelect:hover {
  border-color: var(--border-hover);
}

.filterSelect:focus {
  outline: none;
  border-color: #667eea;
  box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);
}

@media (max-width: 768px) {
  .filterControls {
    flex-direction: column;
    align-items: stretch;
    gap: 12px;
  }

  .filterSelect {
    width: 100%;
  }
}

/* Kanban Board */
.kanbanBoard {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 24px;
  margin-top: 16px;
  min-height: 500px;
}

.kanbanColumn {
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 16px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.columnHeader {
  padding: 16px;
  background: var(--bg-primary);
  border-bottom: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.columnHeader h3 {
  margin: 0;
  font-size: 16px;
  font-weight: 600;
  color: var(--text-primary);
}

.taskCount {
  background: var(--bg-secondary);
  color: var(--text-secondary);
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 12px;
  font-weight: 500;
}

.columnContent {
  padding: 16px;
  flex: 1;
  overflow-y: auto;
  min-height: 200px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  transition: background-color 0.2s ease;
}

.draggingOver {
  background: var(--bg-hover);
  transition: background-color 0.2s ease;
}

.dragging {
  background: var(--bg-secondary);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  transform: rotate(2deg) scale(1.02);
  transition: all 0.2s ease;
}

.kanbanTask {
  background: var(--bg-primary);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  padding: 16px;
  cursor: grab;
  transition: opacity 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
  display: flex;
  flex-direction: column;
  gap: 12px;
  opacity: 1;
}

.kanbanTask:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
}

.kanbanTask[aria-disabled="true"] {
  opacity: 0.7;
  cursor: not-allowed;
}

.kanbanTaskContent {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.kanbanTaskActions {
  display: flex;
  gap: 8px;
  margin-top: 8px;
  padding-top: 8px;
  border-top: 1px solid var(--border-color);
  opacity: 0;
  transition: opacity 0.2s ease;
}

.kanbanTask:hover .kanbanTaskActions {
  opacity: 1;
}

.kanbanTask .editButton,
.kanbanTask .deleteButton {
  padding: 6px;
  border-radius: 6px;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
}

.kanbanTask .editButton:hover {
  background: rgba(102, 126, 234, 0.1);
  color: #667eea;
  border-color: #667eea;
}

.kanbanTask .deleteButton:hover {
  background: rgba(239, 68, 68, 0.1);
  color: #ef4444;
  border-color: #ef4444;
}

/* Completed Task Styles in Kanban */
.kanbanTask .completedTask {
  text-decoration: line-through;
  opacity: 0.7;
  color: var(--text-secondary);
}

.kanbanTask .completedMeta {
  opacity: 0.7;
}

.kanbanTask[data-completed="true"] {
  background: var(--bg-primary);
  border-color: var(--border-color);
  opacity: 0.85;
}

.kanbanTask[data-completed="true"]:hover {
  opacity: 1;
}

.kanbanTask .taskProject,
.kanbanTask .taskPriority,
.kanbanTask .taskDue {
  transition: opacity 0.2s ease;
}

/* Responsive styles for Kanban */
@media (max-width: 1024px) {
  .kanbanBoard {
    grid-template-columns: 1fr;
    gap: 16px;
  }

  .kanbanColumn {
    min-height: auto;
  }
}

/* Loading and Error States */
.loadingState,
.errorState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 48px 24px;
  text-align: center;
  min-height: 400px;
  background: var(--bg-secondary);
  border-radius: 16px;
  border: 1px solid var(--border-color);
}

.loadingState p {
  color: var(--text-secondary);
  font-size: 16px;
  margin: 0;
}

.errorState svg {
  color: #ef4444;
  margin-bottom: 16px;
}

.errorState h3 {
  color: var(--text-primary);
  font-size: 20px;
  margin: 0 0 8px 0;
}

.errorState p {
  color: var(--text-secondary);
  font-size: 16px;
  margin: 0 0 24px 0;
}

.retryButton {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  border-radius: 12px;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
}

.retryButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
}

/* Disabled States */
button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}

/* Loading Overlay */
.loadingOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--bg-hover);
  border-radius: 50%;
  border-top-color: var(--primary-color);
  animation: spin 1s linear infinite;
  margin-bottom: 16px;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Update Indicator */
.updateIndicator {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: linear-gradient(
    90deg,
    transparent 0%,
    var(--primary-color) 50%,
    transparent 100%
  );
  animation: slide 1s infinite;
  z-index: 1000;
}

@keyframes slide {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(100%);
  }
}

/* Kanban Edit Form */
.kanbanEditForm {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  padding: 16px;
  margin-top: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  z-index: 100;
}

.kanbanEditForm .formGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 12px;
  margin-bottom: 16px;
}

.kanbanEditForm .taskInput {
  grid-column: 1 / -1;
}

.kanbanEditForm .formActions {
  display: flex;
  gap: 8px;
  justify-content: flex-end;
}

.kanbanTask {
  position: relative;
}

/* Improve form inputs in Kanban */
.kanbanEditForm input,
.kanbanEditForm select {
  padding: 8px 12px;
  border-radius: 8px;
  border: 1px solid var(--border-color);
  background: var(--bg-primary);
  color: var(--text-primary);
  font-size: 14px;
  width: 100%;
}

.kanbanEditForm input:focus,
.kanbanEditForm select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);
}

@media (max-width: 768px) {
  .kanbanEditForm {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    max-width: 400px;
    max-height: 90vh;
    overflow-y: auto;
  }

  .kanbanEditForm .formGrid {
    grid-template-columns: 1fr;
  }
}
